// <auto-generated />
using System;
using CalisthenicsLeagues.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalisthenicsLeagues.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250423152020_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CalisthenicsLeagues.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("League")
                        .HasColumnType("int")
                        .HasColumnName("league");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YoutubeLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("applications", (string)null);
                });

            modelBuilder.Entity("CalisthenicsLeagues.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("leagues", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "Images/Leagues/Legendary.png",
                            Name = "Legendary"
                        },
                        new
                        {
                            Id = 2,
                            Image = "Images/Leagues/World-Class.png",
                            Name = "World-Class"
                        },
                        new
                        {
                            Id = 3,
                            Image = "Images/Leagues/Pro.png",
                            Name = "Pro"
                        },
                        new
                        {
                            Id = 4,
                            Image = "Images/Leagues/Semi-pro.png",
                            Name = "Semi-pro"
                        },
                        new
                        {
                            Id = 5,
                            Image = "Images/Leagues/Amateur.png",
                            Name = "Amateur"
                        },
                        new
                        {
                            Id = 6,
                            Image = "Images/Leagues/Beginner.png",
                            Name = "Beginner"
                        });
                });

            modelBuilder.Entity("CalisthenicsLeagues.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HasReply")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFile")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("League")
                        .HasColumnType("int")
                        .HasColumnName("league");

                    b.Property<string>("ReplyContent")
                        .HasColumnType("longtext");

                    b.Property<string>("ReplyUser")
                        .HasColumnType("longtext");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("CalisthenicsLeagues.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Total_price")
                        .HasColumnType("double");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("CalisthenicsLeagues.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("League")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Order_id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShirtImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("CalisthenicsLeagues.Models.Shirt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("League")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ShirtImageBlackBack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShirtImageBlackFront")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShirtImageWhiteBack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShirtImageWhiteFront")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("shirts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            League = "Legendary",
                            Price = 19.989999999999998,
                            ShirtImageBlackBack = "Images/Shirts/Legendary/shirtImageBlackBack.png",
                            ShirtImageBlackFront = "Images/Shirts/Legendary/shirtImageBlackFront.png",
                            ShirtImageWhiteBack = "Images/Shirts/Legendary/shirtImageWhiteBack.png",
                            ShirtImageWhiteFront = "Images/Shirts/Legendary/shirtImageWhiteFront.png"
                        },
                        new
                        {
                            Id = 2,
                            League = "World-Class",
                            Price = 19.989999999999998,
                            ShirtImageBlackBack = "Images/Shirts/WorldClass/shirtImageBlackBack.png",
                            ShirtImageBlackFront = "Images/Shirts/WorldClass/shirtImageBlackFront.png",
                            ShirtImageWhiteBack = "Images/Shirts/WorldClass/shirtImageWhiteBack.png",
                            ShirtImageWhiteFront = "Images/Shirts/WorldClass/shirtImageWhiteFront.png"
                        },
                        new
                        {
                            Id = 3,
                            League = "Pro",
                            Price = 19.989999999999998,
                            ShirtImageBlackBack = "Images/Shirts/Pro/shirtImageBlackBack.png",
                            ShirtImageBlackFront = "Images/Shirts/Pro/shirtImageBlackFront.png",
                            ShirtImageWhiteBack = "Images/Shirts/Pro/shirtImageWhiteBack.png",
                            ShirtImageWhiteFront = "Images/Shirts/Pro/shirtImageWhiteFront.png"
                        },
                        new
                        {
                            Id = 4,
                            League = "Semi-pro",
                            Price = 19.989999999999998,
                            ShirtImageBlackBack = "Images/Shirts/SemiPro/shirtImageBlackBack.png",
                            ShirtImageBlackFront = "Images/Shirts/SemiPro/shirtImageBlackFront.png",
                            ShirtImageWhiteBack = "Images/Shirts/SemiPro/shirtImageWhiteBack.png",
                            ShirtImageWhiteFront = "Images/Shirts/SemiPro/shirtImageWhiteFront.png"
                        },
                        new
                        {
                            Id = 5,
                            League = "Amateur",
                            Price = 19.989999999999998,
                            ShirtImageBlackBack = "Images/Shirts/Amateur/shirtImageBlackBack.png",
                            ShirtImageBlackFront = "Images/Shirts/Amateur/shirtImageBlackFront.png",
                            ShirtImageWhiteBack = "Images/Shirts/Amateur/shirtImageWhiteBack.png",
                            ShirtImageWhiteFront = "Images/Shirts/Amateur/shirtImageWhiteFront.png"
                        },
                        new
                        {
                            Id = 6,
                            League = "Beginner",
                            Price = 19.989999999999998,
                            ShirtImageBlackBack = "Images/Shirts/Beginner/shirtImageBlackBack.png",
                            ShirtImageBlackFront = "Images/Shirts/Beginner/shirtImageBlackFront.png",
                            ShirtImageWhiteBack = "Images/Shirts/Beginner/shirtImageWhiteBack.png",
                            ShirtImageWhiteFront = "Images/Shirts/Beginner/shirtImageWhiteFront.png"
                        });
                });

            modelBuilder.Entity("CalisthenicsLeagues.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("League")
                        .HasColumnType("int")
                        .HasColumnName("league");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accepted = true,
                            Admin = true,
                            Country = "Serbia",
                            DateOfBirth = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anaanic@gmail.com",
                            Image = "Images\\7d40b63c-7ba5-4566-991d-f1d2935013b2.jpg",
                            Instagram = "anci",
                            League = 1,
                            Name = "Ana",
                            Password = "AQAAAAIAAYagAAAAEJyN3MFFnzn1wM4ub0fxGKCfcL8If+oRC/JDg48++2nBQ8h1phBNRuT4NJy/+J0lbA==",
                            Surname = "Anic",
                            Username = "Ana123"
                        },
                        new
                        {
                            Id = 2,
                            Accepted = true,
                            Admin = false,
                            Country = "Serbia",
                            DateOfBirth = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nikola@gmail.com",
                            Image = "Images\\366a0530-ab16-4300-8b72-563dc332cc79.jpg",
                            Instagram = "nikola",
                            League = 5,
                            Name = "Nikola",
                            Password = "AQAAAAIAAYagAAAAEJ7GnObPLBb20PLjWZclVKuud3wmOFDZUxmd6jrpIDN9b9UXp+sgh9qVrQtFNYFCgA==",
                            Surname = "Nikolic",
                            Username = "Nikola123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
